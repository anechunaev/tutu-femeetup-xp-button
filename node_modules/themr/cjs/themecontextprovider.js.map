{"version":3,"sources":["themecontextprovider.tsx"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;;;;;AAEH,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,mCAAsB,oBAAoB,CAAC,CAAA;AAC3C,oBAAyC,KAAK,CAAC,CAAA;AAY/C;IACE,+CAA0D;IAS1D,qCAAY,KAA4C;QACtD,kBAAM,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;QAC1D,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,YAAS,CAAC,4BAAS,EAAE,CAAC,CAAC;IAC5D,CAAC;IAEM,+DAAyB,GAAhC,UAAiC,SAAgD;QAC/E,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC;QACrC,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC;IAC3B,CAAC;IAEM,qDAAe,GAAtB;QACE,MAAM,CAAC;YACL,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,GAAG,EAAE,IAAI,CAAC,GAAG;SACd,CAAC;IACJ,CAAC;IAEM,4CAAM,GAAb;QACE,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAClD,CAAC;IA5Ba,6CAAiB,GAAQ;QACrC,SAAS,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM;QACjC,GAAG,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU;KACvC,CAAC;IA0BJ,kCAAC;AAAD,CA/BA,AA+BC,CA9BC,KAAK,CAAC,SAAS,GA8BhB;AA/BY,mCAA2B,8BA+BvC,CAAA;AAED;IAA0C,wCAAgC;IAA1E;QAA0C,8BAAgC;IAAG,CAAC;IAAD,2BAAC;AAAD,CAA7E,AAA8E,CAApC,2BAA2B,GAAS;AAAjE,4BAAoB,uBAA6C,CAAA","file":"themecontextprovider.js","sourcesContent":["/**\n * @license\n * Copyright (C) 2016 Chi Vinh Le and contributors.\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file for details.\n */\n\nimport * as React from \"react\";\nimport jssPreset from \"jss-preset-default\";\nimport { create as createJSS, JSS } from \"jss\";\n\nexport interface ThemeContext<TThemeVars> {\n  themeVars?: TThemeVars;\n  jss?: JSS;\n}\n\nexport interface ThemeContextProviderProps<TThemeVars> {\n  themeVars?: TThemeVars;\n  jss?: JSS;\n}\n\nexport class GenericThemeContextProvider<TThemeVars> extends\n  React.Component<ThemeContextProviderProps<TThemeVars>, {}> {\n  public static childContextTypes: any = {\n    themeVars: React.PropTypes.object,\n    jss: React.PropTypes.object.isRequired,\n  };\n\n  private themeVars: TThemeVars;\n  private jss: JSS;\n\n  constructor(props: ThemeContextProviderProps<TThemeVars>) {\n    super(props);\n    this.themeVars = props.themeVars ? props.themeVars : null;\n    this.jss = props.jss ? props.jss : createJSS(jssPreset());\n  }\n\n  public componentWillReceiveProps(nextProps: ThemeContextProviderProps<TThemeVars>): void {\n    this.themeVars = nextProps.themeVars;\n    this.jss = nextProps.jss;\n  }\n\n  public getChildContext(): ThemeContext<TThemeVars> {\n    return {\n      themeVars: this.themeVars,\n      jss: this.jss,\n    };\n  }\n\n  public render(): React.ReactElement<any> {\n    return React.Children.only(this.props.children);\n  }\n}\n\nexport class ThemeContextProvider extends GenericThemeContextProvider<any> { }\n"]}