/**
 * @license
 * Copyright (C) 2016 Chi Vinh Le and contributors.
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file for details.
 */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var React = require("react");
var jss_preset_default_1 = require("jss-preset-default");
var jss_1 = require("jss");
var GenericThemeContextProvider = (function (_super) {
    __extends(GenericThemeContextProvider, _super);
    function GenericThemeContextProvider(props) {
        _super.call(this, props);
        this.themeVars = props.themeVars ? props.themeVars : null;
        this.jss = props.jss ? props.jss : jss_1.create(jss_preset_default_1.default());
    }
    GenericThemeContextProvider.prototype.componentWillReceiveProps = function (nextProps) {
        this.themeVars = nextProps.themeVars;
        this.jss = nextProps.jss;
    };
    GenericThemeContextProvider.prototype.getChildContext = function () {
        return {
            themeVars: this.themeVars,
            jss: this.jss,
        };
    };
    GenericThemeContextProvider.prototype.render = function () {
        return React.Children.only(this.props.children);
    };
    GenericThemeContextProvider.childContextTypes = {
        themeVars: React.PropTypes.object,
        jss: React.PropTypes.object.isRequired,
    };
    return GenericThemeContextProvider;
}(React.Component));
exports.GenericThemeContextProvider = GenericThemeContextProvider;
var ThemeContextProvider = (function (_super) {
    __extends(ThemeContextProvider, _super);
    function ThemeContextProvider() {
        _super.apply(this, arguments);
    }
    return ThemeContextProvider;
}(GenericThemeContextProvider));
exports.ThemeContextProvider = ThemeContextProvider;

//# sourceMappingURL=themecontextprovider.js.map
