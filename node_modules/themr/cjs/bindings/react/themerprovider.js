/**
 * @license
 * Copyright (C) 2016 Chi Vinh Le and contributors.
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file for details.
 */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var React = require("react");
var ThemerProvider = (function (_super) {
    __extends(ThemerProvider, _super);
    function ThemerProvider(props) {
        var _this = _super.call(this, props) || this;
        _this.vars = props.vars || {};
        _this.transformer = props.transformer;
        return _this;
    }
    ThemerProvider.prototype.componentWillReceiveProps = function (nextProps) {
        this.vars = nextProps.vars || {};
        this.transformer = nextProps.transformer;
    };
    ThemerProvider.prototype.getChildContext = function () {
        return {
            themer: {
                vars: this.vars,
                transformer: this.transformer,
            },
        };
    };
    ThemerProvider.prototype.render = function () {
        return React.Children.only(this.props.children);
    };
    return ThemerProvider;
}(React.Component));
ThemerProvider.childContextTypes = {
    themer: React.PropTypes.object,
};
exports.ThemerProvider = ThemerProvider;

//# sourceMappingURL=themerprovider.js.map
