/**
 * @license
 * Copyright (C) 2016 Chi Vinh Le and contributors.
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file for details.
 */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
var React = require("react");
var themrProvider_1 = require("./themrProvider");
var utils_1 = require("./utils");
var indexCounter = -10000;
function withTheme(options) {
    if (options === void 0) { options = {}; }
    if (!options.index) {
        options.index = indexCounter++;
    }
    var index = indexCounter++;
    return function (TargetComponent) {
        var enhanced = (_a = (function (_super) {
                __extends(WithTheme, _super);
                function WithTheme(props, context) {
                    var _this = _super.call(this, props, context) || this;
                    _this.theme = computeTheme(props.themeRules, props, context, options);
                    return _this;
                }
                WithTheme.prototype.componentWillReceiveProps = function (nextProps) {
                    this.theme = computeTheme(nextProps.themeRules, nextProps, this.context, options);
                };
                WithTheme.prototype.render = function () {
                    var _a = this.props, _ = _a.themeRules, rest = __rest(_a, ["themeRules"]);
                    return React.createElement(TargetComponent, __assign({}, rest, { theme: this.theme }));
                };
                return WithTheme;
            }(React.Component)),
            _a.contextTypes = themrProvider_1.ThemrProvider.childContextTypes,
            _a);
        return enhanced;
        var _a;
    };
}
exports.withTheme = withTheme;
function computeTheme(rules, props, context, options) {
    props = options.mapProps ? options.mapProps(props) : {};
    var _a = context.themer, vars = _a.vars, transformer = _a.transformer;
    var customTheme = props.theme;
    var transformed = transformer(rules, options, props, vars);
    return customTheme ? utils_1.mergeTheme(transformed, customTheme) : transformed;
}

//# sourceMappingURL=withTheme.js.map
