/// <reference types="react" />
/**
 * @license
 * Copyright (C) 2016 Chi Vinh Le and contributors.
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file for details.
 */
import * as React from "react";
import { ThemeFactory } from "../../index";
export declare type DecoratorTarget<TProps> = React.StatelessComponent<TProps> | React.ComponentClass<TProps>;
export declare type Decorator<TInner, TOuter> = (target: DecoratorTarget<TInner>) => React.ComponentClass<TOuter>;
export interface ThemeAttributes<TTheme> {
    theme?: TTheme;
}
export declare function withTheme<TProps extends {
    theme?: TTheme;
}, TTheme, TThemeProps>(themeFactory: ThemeFactory<TTheme, TThemeProps, any>, mapPropsToTheme?: (props: TProps) => TThemeProps): Decorator<TProps, TProps>;
