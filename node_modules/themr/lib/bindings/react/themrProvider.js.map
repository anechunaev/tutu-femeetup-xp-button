{"version":3,"sources":["bindings/react/themrprovider.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;;;;AAEH,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAgB/B;IACE,iCAA8C;IAQ9C,uBAAY,KAAgC;QAA5C,YACE,kBAAM,KAAK,CAAC,SAGb;QAFC,KAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,IAAI,EAAS,CAAC;QACpC,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;;IACvC,CAAC;IAEM,iDAAyB,GAAhC,UAAiC,SAAoC;QACnE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,IAAI,EAAS,CAAC;QACxC,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,WAAW,CAAC;IAC3C,CAAC;IAEM,uCAAe,GAAtB;QACE,MAAM,CAAC;YACL,MAAM,EAAE;gBACN,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,WAAW,EAAE,IAAI,CAAC,WAAW;aAC9B;SACF,CAAC;IACJ,CAAC;IAEM,8BAAM,GAAb;QACE,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAClD,CAAC;IACH,oBAAC;AAAD,CAhCA,AAgCC,CA/BC,KAAK,CAAC,SAAS;;AACD,+BAAiB,GAAQ;IACrC,MAAM,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM;CAC/B,CAAC","file":"themrprovider.js","sourcesContent":["/**\n * @license\n * Copyright (C) 2016 Chi Vinh Le and contributors.\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file for details.\n */\n\nimport * as React from \"react\";\n\nimport { Transformer } from \"../../transformer\";\n\nexport interface ThemrContext<TVars> {\n  themer: {\n    vars: TVars;\n    transformer: Transformer;\n  };\n}\n\nexport interface ThemrProviderProps<TVars> {\n  vars?: TVars;\n  transformer: Transformer;\n}\n\nexport class ThemrProvider<TVars> extends\n  React.Component<ThemrProviderProps<TVars>, {}> {\n  public static childContextTypes: any = {\n    themer: React.PropTypes.object,\n  };\n\n  private vars: TVars;\n  private transformer: Transformer;\n\n  constructor(props: ThemrProviderProps<TVars>) {\n    super(props);\n    this.vars = props.vars || {} as any;\n    this.transformer = props.transformer;\n  }\n\n  public componentWillReceiveProps(nextProps: ThemrProviderProps<TVars>): void {\n    this.vars = nextProps.vars || {} as any;\n    this.transformer = nextProps.transformer;\n  }\n\n  public getChildContext(): ThemrContext<TVars> {\n    return {\n      themer: {\n        vars: this.vars,\n        transformer: this.transformer,\n      },\n    };\n  }\n\n  public render(): React.ReactElement<any> {\n    return React.Children.only(this.props.children);\n  }\n}\n"]}