/// <reference types="react" />
/**
 * @license
 * Copyright (C) 2016 Chi Vinh Le and contributors.
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file for details.
 */
import * as React from "react";
import { JSS } from "jss";
export interface ThemeContext<TThemeVars> {
    themeVars?: TThemeVars;
    jss?: JSS;
}
export interface ThemeContextProviderProps<TThemeVars> {
    themeVars?: TThemeVars;
    jss?: JSS;
}
export declare class GenericThemeContextProvider<TThemeVars> extends React.Component<ThemeContextProviderProps<TThemeVars>, {}> {
    static childContextTypes: any;
    private themeVars;
    private jss;
    constructor(props: ThemeContextProviderProps<TThemeVars>);
    componentWillReceiveProps(nextProps: ThemeContextProviderProps<TThemeVars>): void;
    getChildContext(): ThemeContext<TThemeVars>;
    render(): React.ReactElement<any>;
}
export declare class ThemeContextProvider extends GenericThemeContextProvider<any> {
}
