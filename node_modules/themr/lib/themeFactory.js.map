{"version":3,"sources":["themefactory.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAOH,IAAI,EAAE,GAAG,CAAC,CAAC;AAEX,MAAM,6BAMJ,KAAa,EACb,OAA2B;IAA3B,wBAAA,EAAA,YAA2B;IAE3B,EAAE,EAAE,CAAC;IACL,MAAM,CAAC,UAAC,WAAW,EAAE,KAAK,EAAE,IAAgB;QAAhB,qBAAA,EAAA,OAAO,EAAS;QAC1C,OAAA,WAAW,CAAC,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC;IAA5C,CAA4C,CAAC;AACjD,CAAC","file":"themefactory.js","sourcesContent":["/**\n * @license\n * Copyright (C) 2016 Chi Vinh Le and contributors.\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file for details.\n */\n\nimport { Transformer } from \"./transformer\";\n\nexport type ThemeFactory<TTheme, TProps, TVars> =\n  (transformer: Transformer, props: TProps, vars?: TVars) => TTheme;\n\nlet id = 0;\n\nexport function createThemeFactory<\n  TTheme,\n  TProps,\n  TVars,\n  TRules extends (props?: TProps, vars?: TVars) => any,\n  TOptions>(\n  rules: TRules,\n  options: TOptions | {} = {},\n): ThemeFactory<TTheme, TProps, TVars> {\n  id++;\n  return (transformer, props, vars = {} as any) =>\n    transformer(id, rules, options, props, vars);\n}\n"]}