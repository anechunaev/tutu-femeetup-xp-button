/**
 * @license
 * Copyright (C) 2016 Chi Vinh Le and contributors.
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file for details.
 */
export function createTransformer() {
    var plugins = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        plugins[_i] = arguments[_i];
    }
    // TODO: Use WeakMap.
    var rulesRegistry = [];
    var runtime = {};
    return function (rules, options, props, vars) {
        if (options === void 0) { options = {}; }
        if (props === void 0) { props = {}; }
        if (vars === void 0) { vars = {}; }
        var id = rulesRegistry.indexOf(rules);
        if (id < 0) {
            id = rulesRegistry.push(rules);
        }
        if (!runtime[id]) {
            runtime[id] = {};
        }
        var task = {
            id: id, options: options,
            props: props,
            vars: vars,
            rules: rules ? rules(props, vars) : {},
            runtime: runtime[id],
        };
        plugins.forEach(function (t) { return t(task); });
        if (!task.rules.styles) {
            task.rules.styles = {};
        }
        if (!task.rules.classes) {
            task.rules.classes = {};
        }
        if (!task.rules.themes) {
            task.rules.themes = {};
        }
        return task.rules;
    };
}

//# sourceMappingURL=transformer.js.map
